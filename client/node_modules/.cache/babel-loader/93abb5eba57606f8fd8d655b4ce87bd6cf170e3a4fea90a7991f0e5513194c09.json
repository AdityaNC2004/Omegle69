{"ast":null,"code":"var _jsxFileName = \"/Users/aditya/Documents/Projects/omegle-clone/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5050', {\n  autoConnect: false\n}); // Match the backend port\n\nfunction App() {\n  _s();\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    socket.connect(); // ðŸ‘ˆ force connection\n    socket.on('partner-found', () => {\n      setConnected(true);\n      setMessages([{\n        from: 'system',\n        text: 'You are now connected to a stranger.'\n      }]);\n    });\n    socket.on('message', msg => {\n      setMessages(prev => [...prev, {\n        from: 'stranger',\n        text: msg\n      }]);\n    });\n    socket.on('partner-disconnected', () => {\n      setConnected(false);\n      setMessages(prev => [...prev, {\n        from: 'system',\n        text: 'Stranger disconnected. Refresh to reconnect.'\n      }]);\n    });\n    return () => socket.disconnect();\n  }, []);\n  const sendMessage = () => {\n    if (input.trim()) {\n      socket.emit('message', input);\n      setMessages(prev => [...prev, {\n        from: 'you',\n        text: input\n      }]);\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDFE2 Omegle Clone - Text Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid gray',\n        padding: 10,\n        height: 300,\n        overflowY: 'scroll'\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.from, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), connected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Type a message\",\n        style: {\n          width: '80%',\n          padding: 10,\n          marginTop: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: 10,\n          marginLeft: 10\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDD04 Searching for a partner...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XZuEV7xx/PVopdI/MjQgnxasCyA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","autoConnect","App","_s","connected","setConnected","messages","setMessages","input","setInput","connect","on","from","text","msg","prev","disconnect","sendMessage","trim","emit","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","map","idx","type","value","onChange","e","target","onKeyDown","key","placeholder","width","marginTop","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/Users/aditya/Documents/Projects/omegle-clone/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\n\nconst socket = io('http://localhost:5050', { autoConnect: false }); // Match the backend port\n\nfunction App() {\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    socket.connect(); // ðŸ‘ˆ force connection\n    socket.on('partner-found', () => {\n      setConnected(true);\n      setMessages([{ from: 'system', text: 'You are now connected to a stranger.' }]);\n    });\n\n    socket.on('message', (msg) => {\n      setMessages((prev) => [...prev, { from: 'stranger', text: msg }]);\n    });\n\n    socket.on('partner-disconnected', () => {\n      setConnected(false);\n      setMessages((prev) => [...prev, { from: 'system', text: 'Stranger disconnected. Refresh to reconnect.' }]);\n    });\n\n    return () => socket.disconnect();\n  }, []);\n\n  const sendMessage = () => {\n    if (input.trim()) {\n      socket.emit('message', input);\n      setMessages((prev) => [...prev, { from: 'you', text: input }]);\n      setInput('');\n    }\n  };\n\n  return (\n    <div style={{ padding: 20, fontFamily: 'Arial' }}>\n      <h1>ðŸŸ¢ Omegle Clone - Text Chat</h1>\n      <div style={{ border: '1px solid gray', padding: 10, height: 300, overflowY: 'scroll' }}>\n        {messages.map((msg, idx) => (\n          <div key={idx}>\n            <strong>{msg.from}:</strong> {msg.text}\n          </div>\n        ))}\n      </div>\n      {connected ? (\n        <>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\n            placeholder=\"Type a message\"\n            style={{ width: '80%', padding: 10, marginTop: 10 }}\n          />\n          <button onClick={sendMessage} style={{ padding: 10, marginLeft: 10 }}>\n            Send\n          </button>\n        </>\n      ) : (\n        <p>ðŸ”„ Searching for a partner...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}